diff --git a/node_modules/jspdf-autotable/dist/jspdf-autotable.js b/node_modules/jspdf-autotable/dist/jspdf-autotable.js
index 54d35e1..8d86786 100644
--- a/node_modules/jspdf-autotable/dist/jspdf-autotable.js
+++ b/node_modules/jspdf-autotable/dist/jspdf-autotable.js
@@ -10,7 +10,12 @@
   function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }
 
   var jsPDF__default = /*#__PURE__*/_interopDefaultLegacy(jsPDF);
-  var canvg = /*#__PURE__*/_interopDefaultLegacy(canvg_1);
+  var canvg$1;
+  try {
+    canvg$1 = _interopDefaultLegacy(require('canvg'));
+  } catch (e) {
+    canvg$1 = _interopDefaultLegacy(canvg_1);
+  }
 
   var CellHookData = /** @class */ (function () {
       function CellHookData(doc, table, cell, row, column) {
@@ -1181,7 +1186,7 @@
       if (img.width && img.height) {
           var newRatio = img.width / img.height;
           if (ratio > newRatio) {
-              w = img.height * ratio;
+              w = img.height * newRatio;
           }
           else {
               h = img.width / ratio;
@@ -1202,7 +1207,7 @@
       var canvas = document.createElement('canvas');
       canvas.width = w;
       canvas.height = h;
-      var context = canvas.getContext('2d');
+      var context = canvas.getContext('2d', { willReadFrequently: true });
       if (!context) {
           throw new Error('Could not get canvas context');
       }
@@ -1213,7 +1218,7 @@
           context.fillStyle = 'white';
           context.fillRect(0, 0, w, h);
       }
-      canvg.default.from(context, svg.outerHTML).start();
+      canvg$1.default.from(context, svg.outerHTML).start();
       var dataUrl = canvas.toDataURL('image/jpeg');
       return __assign(__assign({}, img), { data: dataUrl });
   }

